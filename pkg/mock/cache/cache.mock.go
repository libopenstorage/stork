// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/libopenstorage/stork/pkg/cache (interfaces: SharedInformerCache)

// Package cache is a generated GoMock package.
package cache

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/libopenstorage/stork/pkg/apis/stork/v1alpha1"
	v1 "k8s.io/api/core/v1"
	v10 "k8s.io/api/storage/v1"
)

// MockSharedInformerCache is a mock of SharedInformerCache interface.
type MockSharedInformerCache struct {
	ctrl     *gomock.Controller
	recorder *MockSharedInformerCacheMockRecorder
}

// MockSharedInformerCacheMockRecorder is the mock recorder for MockSharedInformerCache.
type MockSharedInformerCacheMockRecorder struct {
	mock *MockSharedInformerCache
}

// NewMockSharedInformerCache creates a new mock instance.
func NewMockSharedInformerCache(ctrl *gomock.Controller) *MockSharedInformerCache {
	mock := &MockSharedInformerCache{ctrl: ctrl}
	mock.recorder = &MockSharedInformerCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSharedInformerCache) EXPECT() *MockSharedInformerCacheMockRecorder {
	return m.recorder
}

// GetApplicationRegistration mocks base method.
func (m *MockSharedInformerCache) GetApplicationRegistration(arg0 string) (*v1alpha1.ApplicationRegistration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApplicationRegistration", arg0)
	ret0, _ := ret[0].(*v1alpha1.ApplicationRegistration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApplicationRegistration indicates an expected call of GetApplicationRegistration.
func (mr *MockSharedInformerCacheMockRecorder) GetApplicationRegistration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApplicationRegistration", reflect.TypeOf((*MockSharedInformerCache)(nil).GetApplicationRegistration), arg0)
}

// GetPersistentVolumeClaim mocks base method.
func (m *MockSharedInformerCache) GetPersistentVolumeClaim(arg0, arg1 string) (*v1.PersistentVolumeClaim, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersistentVolumeClaim", arg0, arg1)
	ret0, _ := ret[0].(*v1.PersistentVolumeClaim)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersistentVolumeClaim indicates an expected call of GetPersistentVolumeClaim.
func (mr *MockSharedInformerCacheMockRecorder) GetPersistentVolumeClaim(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersistentVolumeClaim", reflect.TypeOf((*MockSharedInformerCache)(nil).GetPersistentVolumeClaim), arg0, arg1)
}

// GetStorageClass mocks base method.
func (m *MockSharedInformerCache) GetStorageClass(arg0 string) (*v10.StorageClass, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorageClass", arg0)
	ret0, _ := ret[0].(*v10.StorageClass)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStorageClass indicates an expected call of GetStorageClass.
func (mr *MockSharedInformerCacheMockRecorder) GetStorageClass(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageClass", reflect.TypeOf((*MockSharedInformerCache)(nil).GetStorageClass), arg0)
}

// GetStorageClassForPVC mocks base method.
func (m *MockSharedInformerCache) GetStorageClassForPVC(arg0 *v1.PersistentVolumeClaim) (*v10.StorageClass, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorageClassForPVC", arg0)
	ret0, _ := ret[0].(*v10.StorageClass)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStorageClassForPVC indicates an expected call of GetStorageClassForPVC.
func (mr *MockSharedInformerCacheMockRecorder) GetStorageClassForPVC(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageClassForPVC", reflect.TypeOf((*MockSharedInformerCache)(nil).GetStorageClassForPVC), arg0)
}

// ListApplicationRegistrations mocks base method.
func (m *MockSharedInformerCache) ListApplicationRegistrations() (*v1alpha1.ApplicationRegistrationList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListApplicationRegistrations")
	ret0, _ := ret[0].(*v1alpha1.ApplicationRegistrationList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListApplicationRegistrations indicates an expected call of ListApplicationRegistrations.
func (mr *MockSharedInformerCacheMockRecorder) ListApplicationRegistrations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListApplicationRegistrations", reflect.TypeOf((*MockSharedInformerCache)(nil).ListApplicationRegistrations))
}

// ListStorageClasses mocks base method.
func (m *MockSharedInformerCache) ListStorageClasses() (*v10.StorageClassList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListStorageClasses")
	ret0, _ := ret[0].(*v10.StorageClassList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListStorageClasses indicates an expected call of ListStorageClasses.
func (mr *MockSharedInformerCacheMockRecorder) ListStorageClasses() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStorageClasses", reflect.TypeOf((*MockSharedInformerCache)(nil).ListStorageClasses))
}

// ListTransformedPods mocks base method.
func (m *MockSharedInformerCache) ListTransformedPods(arg0 string) (*v1.PodList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTransformedPods", arg0)
	ret0, _ := ret[0].(*v1.PodList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTransformedPods indicates an expected call of ListTransformedPods.
func (mr *MockSharedInformerCacheMockRecorder) ListTransformedPods(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTransformedPods", reflect.TypeOf((*MockSharedInformerCache)(nil).ListTransformedPods), arg0)
}

// WatchPods mocks base method.
func (m *MockSharedInformerCache) WatchPods(arg0 func(interface{})) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchPods", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WatchPods indicates an expected call of WatchPods.
func (mr *MockSharedInformerCacheMockRecorder) WatchPods(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchPods", reflect.TypeOf((*MockSharedInformerCache)(nil).WatchPods), arg0)
}
