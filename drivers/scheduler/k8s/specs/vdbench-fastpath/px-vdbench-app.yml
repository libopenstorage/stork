---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vdbench
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vdbench
  template:
    metadata:
      labels:
        app: vdbench
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                      - fastpath
      containers:
        - name: vdbench
          image: portworx/vdbench:torpedo
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 500Mi
            requests:
              memory: 256Mi
              cpu: 100m
          command: ["./bench_runner.sh"]
          args: ["Writes", "21600"]
          volumeMounts:
            - name: vdbench-persistent-storage
              mountPath: /datadir1
            - name: vdbench-config-vol
              mountPath: /templates/Writes
            - name: vdbench-output-persistent-storage
              mountPath: /output
      volumes:
        - name: vdbench-config-vol
          configMap:
            name: vdbench-config
        - name: vdbench-persistent-storage
          persistentVolumeClaim:
            claimName: vdbench-pvc
        - name: vdbench-output-persistent-storage
          persistentVolumeClaim:
            claimName: vdbench-pvc-output
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vdbench-config
data:
    File-Writes: |
        fsd=fsd-datadir1,anchor=/datadir1,depth=1,width=1,files=1000,size=100M
        fwd=fwd1,fsd=fsd*,rdpct=0,xfersize=(4k,100),fileio=random,threads=4,fileselect=random
        rd=rd1,fwd=fwd*,elapsed=21600,interval=1,fwdrate=max,format=yes
