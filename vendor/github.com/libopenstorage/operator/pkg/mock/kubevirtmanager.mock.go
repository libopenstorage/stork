// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/libopenstorage/operator/pkg/controller/storagecluster (interfaces: KubevirtManager)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	util "github.com/libopenstorage/operator/pkg/util"
)

// MockKubevirtManager is a mock of KubevirtManager interface.
type MockKubevirtManager struct {
	ctrl     *gomock.Controller
	recorder *MockKubevirtManagerMockRecorder
}

// MockKubevirtManagerMockRecorder is the mock recorder for MockKubevirtManager.
type MockKubevirtManagerMockRecorder struct {
	mock *MockKubevirtManager
}

// NewMockKubevirtManager creates a new mock instance.
func NewMockKubevirtManager(ctrl *gomock.Controller) *MockKubevirtManager {
	mock := &MockKubevirtManager{ctrl: ctrl}
	mock.recorder = &MockKubevirtManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubevirtManager) EXPECT() *MockKubevirtManagerMockRecorder {
	return m.recorder
}

// ClusterHasVMPods mocks base method.
func (m *MockKubevirtManager) ClusterHasVMPods() (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClusterHasVMPods")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClusterHasVMPods indicates an expected call of ClusterHasVMPods.
func (mr *MockKubevirtManagerMockRecorder) ClusterHasVMPods() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClusterHasVMPods", reflect.TypeOf((*MockKubevirtManager)(nil).ClusterHasVMPods))
}

// GetVMPodsToEvictByNode mocks base method.
func (m *MockKubevirtManager) GetVMPodsToEvictByNode(arg0 map[string]bool) (map[string][]*util.VMPodEviction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVMPodsToEvictByNode", arg0)
	ret0, _ := ret[0].(map[string][]*util.VMPodEviction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVMPodsToEvictByNode indicates an expected call of GetVMPodsToEvictByNode.
func (mr *MockKubevirtManagerMockRecorder) GetVMPodsToEvictByNode(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVMPodsToEvictByNode", reflect.TypeOf((*MockKubevirtManager)(nil).GetVMPodsToEvictByNode), arg0)
}

// StartEvictingVMPods mocks base method.
func (m *MockKubevirtManager) StartEvictingVMPods(arg0 []*util.VMPodEviction, arg1 string, arg2 func(string)) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartEvictingVMPods", arg0, arg1, arg2)
}

// StartEvictingVMPods indicates an expected call of StartEvictingVMPods.
func (mr *MockKubevirtManagerMockRecorder) StartEvictingVMPods(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartEvictingVMPods", reflect.TypeOf((*MockKubevirtManager)(nil).StartEvictingVMPods), arg0, arg1, arg2)
}
