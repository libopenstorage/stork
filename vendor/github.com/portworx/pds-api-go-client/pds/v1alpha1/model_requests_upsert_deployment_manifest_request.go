/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// RequestsUpsertDeploymentManifestRequest struct for RequestsUpsertDeploymentManifestRequest
type RequestsUpsertDeploymentManifestRequest struct {
	Deleted *bool `json:"deleted,omitempty"`
	Manifest map[string]interface{} `json:"manifest,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewRequestsUpsertDeploymentManifestRequest instantiates a new RequestsUpsertDeploymentManifestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestsUpsertDeploymentManifestRequest() *RequestsUpsertDeploymentManifestRequest {
	this := RequestsUpsertDeploymentManifestRequest{}
	return &this
}

// NewRequestsUpsertDeploymentManifestRequestWithDefaults instantiates a new RequestsUpsertDeploymentManifestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestsUpsertDeploymentManifestRequestWithDefaults() *RequestsUpsertDeploymentManifestRequest {
	this := RequestsUpsertDeploymentManifestRequest{}
	return &this
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *RequestsUpsertDeploymentManifestRequest) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsUpsertDeploymentManifestRequest) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *RequestsUpsertDeploymentManifestRequest) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *RequestsUpsertDeploymentManifestRequest) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetManifest returns the Manifest field value if set, zero value otherwise.
func (o *RequestsUpsertDeploymentManifestRequest) GetManifest() map[string]interface{} {
	if o == nil || o.Manifest == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Manifest
}

// GetManifestOk returns a tuple with the Manifest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsUpsertDeploymentManifestRequest) GetManifestOk() (map[string]interface{}, bool) {
	if o == nil || o.Manifest == nil {
		return nil, false
	}
	return o.Manifest, true
}

// HasManifest returns a boolean if a field has been set.
func (o *RequestsUpsertDeploymentManifestRequest) HasManifest() bool {
	if o != nil && o.Manifest != nil {
		return true
	}

	return false
}

// SetManifest gets a reference to the given map[string]interface{} and assigns it to the Manifest field.
func (o *RequestsUpsertDeploymentManifestRequest) SetManifest(v map[string]interface{}) {
	o.Manifest = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *RequestsUpsertDeploymentManifestRequest) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsUpsertDeploymentManifestRequest) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *RequestsUpsertDeploymentManifestRequest) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *RequestsUpsertDeploymentManifestRequest) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o RequestsUpsertDeploymentManifestRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Manifest != nil {
		toSerialize["manifest"] = o.Manifest
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableRequestsUpsertDeploymentManifestRequest struct {
	value *RequestsUpsertDeploymentManifestRequest
	isSet bool
}

func (v NullableRequestsUpsertDeploymentManifestRequest) Get() *RequestsUpsertDeploymentManifestRequest {
	return v.value
}

func (v *NullableRequestsUpsertDeploymentManifestRequest) Set(val *RequestsUpsertDeploymentManifestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestsUpsertDeploymentManifestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestsUpsertDeploymentManifestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestsUpsertDeploymentManifestRequest(val *RequestsUpsertDeploymentManifestRequest) *NullableRequestsUpsertDeploymentManifestRequest {
	return &NullableRequestsUpsertDeploymentManifestRequest{value: val, isSet: true}
}

func (v NullableRequestsUpsertDeploymentManifestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestsUpsertDeploymentManifestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


