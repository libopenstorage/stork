/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersUpdateBackupRequest struct for ControllersUpdateBackupRequest
type ControllersUpdateBackupRequest struct {
	JobHistoryLimit *int32 `json:"job_history_limit,omitempty"`
}

// NewControllersUpdateBackupRequest instantiates a new ControllersUpdateBackupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersUpdateBackupRequest() *ControllersUpdateBackupRequest {
	this := ControllersUpdateBackupRequest{}
	return &this
}

// NewControllersUpdateBackupRequestWithDefaults instantiates a new ControllersUpdateBackupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersUpdateBackupRequestWithDefaults() *ControllersUpdateBackupRequest {
	this := ControllersUpdateBackupRequest{}
	return &this
}

// GetJobHistoryLimit returns the JobHistoryLimit field value if set, zero value otherwise.
func (o *ControllersUpdateBackupRequest) GetJobHistoryLimit() int32 {
	if o == nil || o.JobHistoryLimit == nil {
		var ret int32
		return ret
	}
	return *o.JobHistoryLimit
}

// GetJobHistoryLimitOk returns a tuple with the JobHistoryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateBackupRequest) GetJobHistoryLimitOk() (*int32, bool) {
	if o == nil || o.JobHistoryLimit == nil {
		return nil, false
	}
	return o.JobHistoryLimit, true
}

// HasJobHistoryLimit returns a boolean if a field has been set.
func (o *ControllersUpdateBackupRequest) HasJobHistoryLimit() bool {
	if o != nil && o.JobHistoryLimit != nil {
		return true
	}

	return false
}

// SetJobHistoryLimit gets a reference to the given int32 and assigns it to the JobHistoryLimit field.
func (o *ControllersUpdateBackupRequest) SetJobHistoryLimit(v int32) {
	o.JobHistoryLimit = &v
}

func (o ControllersUpdateBackupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobHistoryLimit != nil {
		toSerialize["job_history_limit"] = o.JobHistoryLimit
	}
	return json.Marshal(toSerialize)
}

type NullableControllersUpdateBackupRequest struct {
	value *ControllersUpdateBackupRequest
	isSet bool
}

func (v NullableControllersUpdateBackupRequest) Get() *ControllersUpdateBackupRequest {
	return v.value
}

func (v *NullableControllersUpdateBackupRequest) Set(val *ControllersUpdateBackupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersUpdateBackupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersUpdateBackupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersUpdateBackupRequest(val *ControllersUpdateBackupRequest) *NullableControllersUpdateBackupRequest {
	return &NullableControllersUpdateBackupRequest{value: val, isSet: true}
}

func (v NullableControllersUpdateBackupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersUpdateBackupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


