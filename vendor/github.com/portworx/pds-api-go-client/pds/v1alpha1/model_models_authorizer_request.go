/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ModelsAuthorizerRequest struct for ModelsAuthorizerRequest
type ModelsAuthorizerRequest struct {
	EntityId *string `json:"entity_id,omitempty"`
	EntityType *string `json:"entity_type,omitempty"`
	Operation *string `json:"operation,omitempty"`
}

// NewModelsAuthorizerRequest instantiates a new ModelsAuthorizerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsAuthorizerRequest() *ModelsAuthorizerRequest {
	this := ModelsAuthorizerRequest{}
	return &this
}

// NewModelsAuthorizerRequestWithDefaults instantiates a new ModelsAuthorizerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsAuthorizerRequestWithDefaults() *ModelsAuthorizerRequest {
	this := ModelsAuthorizerRequest{}
	return &this
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *ModelsAuthorizerRequest) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAuthorizerRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *ModelsAuthorizerRequest) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *ModelsAuthorizerRequest) SetEntityId(v string) {
	o.EntityId = &v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *ModelsAuthorizerRequest) GetEntityType() string {
	if o == nil || o.EntityType == nil {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAuthorizerRequest) GetEntityTypeOk() (*string, bool) {
	if o == nil || o.EntityType == nil {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *ModelsAuthorizerRequest) HasEntityType() bool {
	if o != nil && o.EntityType != nil {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *ModelsAuthorizerRequest) SetEntityType(v string) {
	o.EntityType = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *ModelsAuthorizerRequest) GetOperation() string {
	if o == nil || o.Operation == nil {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAuthorizerRequest) GetOperationOk() (*string, bool) {
	if o == nil || o.Operation == nil {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *ModelsAuthorizerRequest) HasOperation() bool {
	if o != nil && o.Operation != nil {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *ModelsAuthorizerRequest) SetOperation(v string) {
	o.Operation = &v
}

func (o ModelsAuthorizerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityId != nil {
		toSerialize["entity_id"] = o.EntityId
	}
	if o.EntityType != nil {
		toSerialize["entity_type"] = o.EntityType
	}
	if o.Operation != nil {
		toSerialize["operation"] = o.Operation
	}
	return json.Marshal(toSerialize)
}

type NullableModelsAuthorizerRequest struct {
	value *ModelsAuthorizerRequest
	isSet bool
}

func (v NullableModelsAuthorizerRequest) Get() *ModelsAuthorizerRequest {
	return v.value
}

func (v *NullableModelsAuthorizerRequest) Set(val *ModelsAuthorizerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsAuthorizerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsAuthorizerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsAuthorizerRequest(val *ModelsAuthorizerRequest) *NullableModelsAuthorizerRequest {
	return &NullableModelsAuthorizerRequest{value: val, isSet: true}
}

func (v NullableModelsAuthorizerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsAuthorizerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


