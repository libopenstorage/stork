/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// RequestsIAMRequest struct for RequestsIAMRequest
type RequestsIAMRequest struct {
	ActorId string `json:"actor_id"`
	Data ModelsAccessPolicy `json:"data"`
}

// NewRequestsIAMRequest instantiates a new RequestsIAMRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestsIAMRequest(actorId string, data ModelsAccessPolicy) *RequestsIAMRequest {
	this := RequestsIAMRequest{}
	this.ActorId = actorId
	this.Data = data
	return &this
}

// NewRequestsIAMRequestWithDefaults instantiates a new RequestsIAMRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestsIAMRequestWithDefaults() *RequestsIAMRequest {
	this := RequestsIAMRequest{}
	return &this
}

// GetActorId returns the ActorId field value
func (o *RequestsIAMRequest) GetActorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorId
}

// GetActorIdOk returns a tuple with the ActorId field value
// and a boolean to check if the value has been set.
func (o *RequestsIAMRequest) GetActorIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ActorId, true
}

// SetActorId sets field value
func (o *RequestsIAMRequest) SetActorId(v string) {
	o.ActorId = v
}

// GetData returns the Data field value
func (o *RequestsIAMRequest) GetData() ModelsAccessPolicy {
	if o == nil {
		var ret ModelsAccessPolicy
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *RequestsIAMRequest) GetDataOk() (*ModelsAccessPolicy, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *RequestsIAMRequest) SetData(v ModelsAccessPolicy) {
	o.Data = v
}

func (o RequestsIAMRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["actor_id"] = o.ActorId
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableRequestsIAMRequest struct {
	value *RequestsIAMRequest
	isSet bool
}

func (v NullableRequestsIAMRequest) Get() *RequestsIAMRequest {
	return v.value
}

func (v *NullableRequestsIAMRequest) Set(val *RequestsIAMRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestsIAMRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestsIAMRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestsIAMRequest(val *RequestsIAMRequest) *NullableRequestsIAMRequest {
	return &NullableRequestsIAMRequest{value: val, isSet: true}
}

func (v NullableRequestsIAMRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestsIAMRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


