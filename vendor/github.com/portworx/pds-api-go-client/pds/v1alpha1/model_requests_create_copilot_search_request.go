/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// RequestsCreateCopilotSearchRequest struct for RequestsCreateCopilotSearchRequest
type RequestsCreateCopilotSearchRequest struct {
	DataServiceId *string `json:"data_service_id,omitempty"`
	// TODO: fix example query with best query
	Query *string `json:"query,omitempty"`
}

// NewRequestsCreateCopilotSearchRequest instantiates a new RequestsCreateCopilotSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestsCreateCopilotSearchRequest() *RequestsCreateCopilotSearchRequest {
	this := RequestsCreateCopilotSearchRequest{}
	return &this
}

// NewRequestsCreateCopilotSearchRequestWithDefaults instantiates a new RequestsCreateCopilotSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestsCreateCopilotSearchRequestWithDefaults() *RequestsCreateCopilotSearchRequest {
	this := RequestsCreateCopilotSearchRequest{}
	return &this
}

// GetDataServiceId returns the DataServiceId field value if set, zero value otherwise.
func (o *RequestsCreateCopilotSearchRequest) GetDataServiceId() string {
	if o == nil || o.DataServiceId == nil {
		var ret string
		return ret
	}
	return *o.DataServiceId
}

// GetDataServiceIdOk returns a tuple with the DataServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsCreateCopilotSearchRequest) GetDataServiceIdOk() (*string, bool) {
	if o == nil || o.DataServiceId == nil {
		return nil, false
	}
	return o.DataServiceId, true
}

// HasDataServiceId returns a boolean if a field has been set.
func (o *RequestsCreateCopilotSearchRequest) HasDataServiceId() bool {
	if o != nil && o.DataServiceId != nil {
		return true
	}

	return false
}

// SetDataServiceId gets a reference to the given string and assigns it to the DataServiceId field.
func (o *RequestsCreateCopilotSearchRequest) SetDataServiceId(v string) {
	o.DataServiceId = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *RequestsCreateCopilotSearchRequest) GetQuery() string {
	if o == nil || o.Query == nil {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestsCreateCopilotSearchRequest) GetQueryOk() (*string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *RequestsCreateCopilotSearchRequest) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *RequestsCreateCopilotSearchRequest) SetQuery(v string) {
	o.Query = &v
}

func (o RequestsCreateCopilotSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DataServiceId != nil {
		toSerialize["data_service_id"] = o.DataServiceId
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	return json.Marshal(toSerialize)
}

type NullableRequestsCreateCopilotSearchRequest struct {
	value *RequestsCreateCopilotSearchRequest
	isSet bool
}

func (v NullableRequestsCreateCopilotSearchRequest) Get() *RequestsCreateCopilotSearchRequest {
	return v.value
}

func (v *NullableRequestsCreateCopilotSearchRequest) Set(val *RequestsCreateCopilotSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestsCreateCopilotSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestsCreateCopilotSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestsCreateCopilotSearchRequest(val *RequestsCreateCopilotSearchRequest) *NullableRequestsCreateCopilotSearchRequest {
	return &NullableRequestsCreateCopilotSearchRequest{value: val, isSet: true}
}

func (v NullableRequestsCreateCopilotSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestsCreateCopilotSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


