/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersCreateBackupPolicyRequest struct for ControllersCreateBackupPolicyRequest
type ControllersCreateBackupPolicyRequest struct {
	// Name of the backup policy. Must be unique for the given tenant.
	Name *string `json:"name,omitempty"`
	// An array of the backup schedules. Must be non-empty.
	Schedules []ModelsBackupSchedule `json:"schedules,omitempty"`
}

// NewControllersCreateBackupPolicyRequest instantiates a new ControllersCreateBackupPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersCreateBackupPolicyRequest() *ControllersCreateBackupPolicyRequest {
	this := ControllersCreateBackupPolicyRequest{}
	return &this
}

// NewControllersCreateBackupPolicyRequestWithDefaults instantiates a new ControllersCreateBackupPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersCreateBackupPolicyRequestWithDefaults() *ControllersCreateBackupPolicyRequest {
	this := ControllersCreateBackupPolicyRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ControllersCreateBackupPolicyRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersCreateBackupPolicyRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ControllersCreateBackupPolicyRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ControllersCreateBackupPolicyRequest) SetName(v string) {
	o.Name = &v
}

// GetSchedules returns the Schedules field value if set, zero value otherwise.
func (o *ControllersCreateBackupPolicyRequest) GetSchedules() []ModelsBackupSchedule {
	if o == nil || o.Schedules == nil {
		var ret []ModelsBackupSchedule
		return ret
	}
	return o.Schedules
}

// GetSchedulesOk returns a tuple with the Schedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersCreateBackupPolicyRequest) GetSchedulesOk() ([]ModelsBackupSchedule, bool) {
	if o == nil || o.Schedules == nil {
		return nil, false
	}
	return o.Schedules, true
}

// HasSchedules returns a boolean if a field has been set.
func (o *ControllersCreateBackupPolicyRequest) HasSchedules() bool {
	if o != nil && o.Schedules != nil {
		return true
	}

	return false
}

// SetSchedules gets a reference to the given []ModelsBackupSchedule and assigns it to the Schedules field.
func (o *ControllersCreateBackupPolicyRequest) SetSchedules(v []ModelsBackupSchedule) {
	o.Schedules = v
}

func (o ControllersCreateBackupPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Schedules != nil {
		toSerialize["schedules"] = o.Schedules
	}
	return json.Marshal(toSerialize)
}

type NullableControllersCreateBackupPolicyRequest struct {
	value *ControllersCreateBackupPolicyRequest
	isSet bool
}

func (v NullableControllersCreateBackupPolicyRequest) Get() *ControllersCreateBackupPolicyRequest {
	return v.value
}

func (v *NullableControllersCreateBackupPolicyRequest) Set(val *ControllersCreateBackupPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersCreateBackupPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersCreateBackupPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersCreateBackupPolicyRequest(val *ControllersCreateBackupPolicyRequest) *NullableControllersCreateBackupPolicyRequest {
	return &NullableControllersCreateBackupPolicyRequest{value: val, isSet: true}
}

func (v NullableControllersCreateBackupPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersCreateBackupPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


