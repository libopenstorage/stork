/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ModelsAccessPolicyWithAccountID struct for ModelsAccessPolicyWithAccountID
type ModelsAccessPolicyWithAccountID struct {
	Account []string `json:"account,omitempty"`
	AccountId *string `json:"account_id,omitempty"`
	Global []string `json:"global,omitempty"`
	Namespace []ModelsBinding `json:"namespace,omitempty"`
	Project []ModelsBinding `json:"project,omitempty"`
	Tenant []ModelsBinding `json:"tenant,omitempty"`
}

// NewModelsAccessPolicyWithAccountID instantiates a new ModelsAccessPolicyWithAccountID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsAccessPolicyWithAccountID() *ModelsAccessPolicyWithAccountID {
	this := ModelsAccessPolicyWithAccountID{}
	return &this
}

// NewModelsAccessPolicyWithAccountIDWithDefaults instantiates a new ModelsAccessPolicyWithAccountID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsAccessPolicyWithAccountIDWithDefaults() *ModelsAccessPolicyWithAccountID {
	this := ModelsAccessPolicyWithAccountID{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ModelsAccessPolicyWithAccountID) GetAccount() []string {
	if o == nil || o.Account == nil {
		var ret []string
		return ret
	}
	return o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccessPolicyWithAccountID) GetAccountOk() ([]string, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *ModelsAccessPolicyWithAccountID) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given []string and assigns it to the Account field.
func (o *ModelsAccessPolicyWithAccountID) SetAccount(v []string) {
	o.Account = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ModelsAccessPolicyWithAccountID) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccessPolicyWithAccountID) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ModelsAccessPolicyWithAccountID) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ModelsAccessPolicyWithAccountID) SetAccountId(v string) {
	o.AccountId = &v
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *ModelsAccessPolicyWithAccountID) GetGlobal() []string {
	if o == nil || o.Global == nil {
		var ret []string
		return ret
	}
	return o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccessPolicyWithAccountID) GetGlobalOk() ([]string, bool) {
	if o == nil || o.Global == nil {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *ModelsAccessPolicyWithAccountID) HasGlobal() bool {
	if o != nil && o.Global != nil {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given []string and assigns it to the Global field.
func (o *ModelsAccessPolicyWithAccountID) SetGlobal(v []string) {
	o.Global = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ModelsAccessPolicyWithAccountID) GetNamespace() []ModelsBinding {
	if o == nil || o.Namespace == nil {
		var ret []ModelsBinding
		return ret
	}
	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccessPolicyWithAccountID) GetNamespaceOk() ([]ModelsBinding, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ModelsAccessPolicyWithAccountID) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given []ModelsBinding and assigns it to the Namespace field.
func (o *ModelsAccessPolicyWithAccountID) SetNamespace(v []ModelsBinding) {
	o.Namespace = v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ModelsAccessPolicyWithAccountID) GetProject() []ModelsBinding {
	if o == nil || o.Project == nil {
		var ret []ModelsBinding
		return ret
	}
	return o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccessPolicyWithAccountID) GetProjectOk() ([]ModelsBinding, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ModelsAccessPolicyWithAccountID) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given []ModelsBinding and assigns it to the Project field.
func (o *ModelsAccessPolicyWithAccountID) SetProject(v []ModelsBinding) {
	o.Project = v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *ModelsAccessPolicyWithAccountID) GetTenant() []ModelsBinding {
	if o == nil || o.Tenant == nil {
		var ret []ModelsBinding
		return ret
	}
	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAccessPolicyWithAccountID) GetTenantOk() ([]ModelsBinding, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *ModelsAccessPolicyWithAccountID) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given []ModelsBinding and assigns it to the Tenant field.
func (o *ModelsAccessPolicyWithAccountID) SetTenant(v []ModelsBinding) {
	o.Tenant = v
}

func (o ModelsAccessPolicyWithAccountID) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if o.Global != nil {
		toSerialize["global"] = o.Global
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	return json.Marshal(toSerialize)
}

type NullableModelsAccessPolicyWithAccountID struct {
	value *ModelsAccessPolicyWithAccountID
	isSet bool
}

func (v NullableModelsAccessPolicyWithAccountID) Get() *ModelsAccessPolicyWithAccountID {
	return v.value
}

func (v *NullableModelsAccessPolicyWithAccountID) Set(val *ModelsAccessPolicyWithAccountID) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsAccessPolicyWithAccountID) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsAccessPolicyWithAccountID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsAccessPolicyWithAccountID(val *ModelsAccessPolicyWithAccountID) *NullableModelsAccessPolicyWithAccountID {
	return &NullableModelsAccessPolicyWithAccountID{value: val, isSet: true}
}

func (v NullableModelsAccessPolicyWithAccountID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsAccessPolicyWithAccountID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


