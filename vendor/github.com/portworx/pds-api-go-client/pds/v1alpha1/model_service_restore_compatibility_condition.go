/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ServiceRestoreCompatibilityCondition struct for ServiceRestoreCompatibilityCondition
type ServiceRestoreCompatibilityCondition struct {
	BackupJob *map[string]string `json:"backup_job,omitempty"`
	Image *map[string]string `json:"image,omitempty"`
	TargetCluster *map[string]string `json:"target_cluster,omitempty"`
}

// NewServiceRestoreCompatibilityCondition instantiates a new ServiceRestoreCompatibilityCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceRestoreCompatibilityCondition() *ServiceRestoreCompatibilityCondition {
	this := ServiceRestoreCompatibilityCondition{}
	return &this
}

// NewServiceRestoreCompatibilityConditionWithDefaults instantiates a new ServiceRestoreCompatibilityCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceRestoreCompatibilityConditionWithDefaults() *ServiceRestoreCompatibilityCondition {
	this := ServiceRestoreCompatibilityCondition{}
	return &this
}

// GetBackupJob returns the BackupJob field value if set, zero value otherwise.
func (o *ServiceRestoreCompatibilityCondition) GetBackupJob() map[string]string {
	if o == nil || o.BackupJob == nil {
		var ret map[string]string
		return ret
	}
	return *o.BackupJob
}

// GetBackupJobOk returns a tuple with the BackupJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRestoreCompatibilityCondition) GetBackupJobOk() (*map[string]string, bool) {
	if o == nil || o.BackupJob == nil {
		return nil, false
	}
	return o.BackupJob, true
}

// HasBackupJob returns a boolean if a field has been set.
func (o *ServiceRestoreCompatibilityCondition) HasBackupJob() bool {
	if o != nil && o.BackupJob != nil {
		return true
	}

	return false
}

// SetBackupJob gets a reference to the given map[string]string and assigns it to the BackupJob field.
func (o *ServiceRestoreCompatibilityCondition) SetBackupJob(v map[string]string) {
	o.BackupJob = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ServiceRestoreCompatibilityCondition) GetImage() map[string]string {
	if o == nil || o.Image == nil {
		var ret map[string]string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRestoreCompatibilityCondition) GetImageOk() (*map[string]string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ServiceRestoreCompatibilityCondition) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given map[string]string and assigns it to the Image field.
func (o *ServiceRestoreCompatibilityCondition) SetImage(v map[string]string) {
	o.Image = &v
}

// GetTargetCluster returns the TargetCluster field value if set, zero value otherwise.
func (o *ServiceRestoreCompatibilityCondition) GetTargetCluster() map[string]string {
	if o == nil || o.TargetCluster == nil {
		var ret map[string]string
		return ret
	}
	return *o.TargetCluster
}

// GetTargetClusterOk returns a tuple with the TargetCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRestoreCompatibilityCondition) GetTargetClusterOk() (*map[string]string, bool) {
	if o == nil || o.TargetCluster == nil {
		return nil, false
	}
	return o.TargetCluster, true
}

// HasTargetCluster returns a boolean if a field has been set.
func (o *ServiceRestoreCompatibilityCondition) HasTargetCluster() bool {
	if o != nil && o.TargetCluster != nil {
		return true
	}

	return false
}

// SetTargetCluster gets a reference to the given map[string]string and assigns it to the TargetCluster field.
func (o *ServiceRestoreCompatibilityCondition) SetTargetCluster(v map[string]string) {
	o.TargetCluster = &v
}

func (o ServiceRestoreCompatibilityCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupJob != nil {
		toSerialize["backup_job"] = o.BackupJob
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.TargetCluster != nil {
		toSerialize["target_cluster"] = o.TargetCluster
	}
	return json.Marshal(toSerialize)
}

type NullableServiceRestoreCompatibilityCondition struct {
	value *ServiceRestoreCompatibilityCondition
	isSet bool
}

func (v NullableServiceRestoreCompatibilityCondition) Get() *ServiceRestoreCompatibilityCondition {
	return v.value
}

func (v *NullableServiceRestoreCompatibilityCondition) Set(val *ServiceRestoreCompatibilityCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceRestoreCompatibilityCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceRestoreCompatibilityCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceRestoreCompatibilityCondition(val *ServiceRestoreCompatibilityCondition) *NullableServiceRestoreCompatibilityCondition {
	return &NullableServiceRestoreCompatibilityCondition{value: val, isSet: true}
}

func (v NullableServiceRestoreCompatibilityCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceRestoreCompatibilityCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


