/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ModelsDeploymentTargetDeploymentEvent struct for ModelsDeploymentTargetDeploymentEvent
type ModelsDeploymentTargetDeploymentEvent struct {
	Action *string `json:"action,omitempty"`
	Count *int32 `json:"count,omitempty"`
	DeploymentId *string `json:"deployment_id,omitempty"`
	DeploymentTargetId *string `json:"deployment_target_id,omitempty"`
	Message *string `json:"message,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Reason *string `json:"reason,omitempty"`
	ResourceKind *string `json:"resource_kind,omitempty"`
	ResourceName *string `json:"resource_name,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewModelsDeploymentTargetDeploymentEvent instantiates a new ModelsDeploymentTargetDeploymentEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsDeploymentTargetDeploymentEvent() *ModelsDeploymentTargetDeploymentEvent {
	this := ModelsDeploymentTargetDeploymentEvent{}
	return &this
}

// NewModelsDeploymentTargetDeploymentEventWithDefaults instantiates a new ModelsDeploymentTargetDeploymentEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsDeploymentTargetDeploymentEventWithDefaults() *ModelsDeploymentTargetDeploymentEvent {
	this := ModelsDeploymentTargetDeploymentEvent{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetAction(v string) {
	o.Action = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetCount(v int32) {
	o.Count = &v
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetDeploymentId() string {
	if o == nil || o.DeploymentId == nil {
		var ret string
		return ret
	}
	return *o.DeploymentId
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetDeploymentIdOk() (*string, bool) {
	if o == nil || o.DeploymentId == nil {
		return nil, false
	}
	return o.DeploymentId, true
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasDeploymentId() bool {
	if o != nil && o.DeploymentId != nil {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given string and assigns it to the DeploymentId field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetDeploymentId(v string) {
	o.DeploymentId = &v
}

// GetDeploymentTargetId returns the DeploymentTargetId field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetDeploymentTargetId() string {
	if o == nil || o.DeploymentTargetId == nil {
		var ret string
		return ret
	}
	return *o.DeploymentTargetId
}

// GetDeploymentTargetIdOk returns a tuple with the DeploymentTargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetDeploymentTargetIdOk() (*string, bool) {
	if o == nil || o.DeploymentTargetId == nil {
		return nil, false
	}
	return o.DeploymentTargetId, true
}

// HasDeploymentTargetId returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasDeploymentTargetId() bool {
	if o != nil && o.DeploymentTargetId != nil {
		return true
	}

	return false
}

// SetDeploymentTargetId gets a reference to the given string and assigns it to the DeploymentTargetId field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetDeploymentTargetId(v string) {
	o.DeploymentTargetId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetNamespace(v string) {
	o.Namespace = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetReason(v string) {
	o.Reason = &v
}

// GetResourceKind returns the ResourceKind field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetResourceKind() string {
	if o == nil || o.ResourceKind == nil {
		var ret string
		return ret
	}
	return *o.ResourceKind
}

// GetResourceKindOk returns a tuple with the ResourceKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetResourceKindOk() (*string, bool) {
	if o == nil || o.ResourceKind == nil {
		return nil, false
	}
	return o.ResourceKind, true
}

// HasResourceKind returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasResourceKind() bool {
	if o != nil && o.ResourceKind != nil {
		return true
	}

	return false
}

// SetResourceKind gets a reference to the given string and assigns it to the ResourceKind field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetResourceKind(v string) {
	o.ResourceKind = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetResourceName() string {
	if o == nil || o.ResourceName == nil {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetResourceNameOk() (*string, bool) {
	if o == nil || o.ResourceName == nil {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasResourceName() bool {
	if o != nil && o.ResourceName != nil {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ModelsDeploymentTargetDeploymentEvent) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ModelsDeploymentTargetDeploymentEvent) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ModelsDeploymentTargetDeploymentEvent) SetType(v string) {
	o.Type = &v
}

func (o ModelsDeploymentTargetDeploymentEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.DeploymentId != nil {
		toSerialize["deployment_id"] = o.DeploymentId
	}
	if o.DeploymentTargetId != nil {
		toSerialize["deployment_target_id"] = o.DeploymentTargetId
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.ResourceKind != nil {
		toSerialize["resource_kind"] = o.ResourceKind
	}
	if o.ResourceName != nil {
		toSerialize["resource_name"] = o.ResourceName
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableModelsDeploymentTargetDeploymentEvent struct {
	value *ModelsDeploymentTargetDeploymentEvent
	isSet bool
}

func (v NullableModelsDeploymentTargetDeploymentEvent) Get() *ModelsDeploymentTargetDeploymentEvent {
	return v.value
}

func (v *NullableModelsDeploymentTargetDeploymentEvent) Set(val *ModelsDeploymentTargetDeploymentEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsDeploymentTargetDeploymentEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsDeploymentTargetDeploymentEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsDeploymentTargetDeploymentEvent(val *ModelsDeploymentTargetDeploymentEvent) *NullableModelsDeploymentTargetDeploymentEvent {
	return &NullableModelsDeploymentTargetDeploymentEvent{value: val, isSet: true}
}

func (v NullableModelsDeploymentTargetDeploymentEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsDeploymentTargetDeploymentEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


