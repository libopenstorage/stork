/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ModelsDeployment struct for ModelsDeployment
type ModelsDeployment struct {
	// AccountID which account the deployment belongs to (models.Account).
	AccountId *string `json:"account_id,omitempty"`
	// ClusterResourceName k8s resource name for deployment, built from [data service short name + name + id].
	ClusterResourceName *string `json:"cluster_resource_name,omitempty"`
	// Configuration data service specific configuration for the deployment (models.ApplicationConfigurationTemplate).
	Configuration map[string]interface{} `json:"configuration,omitempty"`
	// ConnectionDetails urls, ports, credentials, etc for connecting to the data service.
	ConnectionDetails map[string]interface{} `json:"connection_details,omitempty"`
	// CreatedAt is autogenerated on creation
	CreatedAt *string `json:"created_at,omitempty"`
	// DataServiceID type of data service (models.DataService).
	DataServiceId *string `json:"data_service_id,omitempty"`
	DeploymentManifest *ModelsDeploymentManifest `json:"deployment_manifest,omitempty"`
	DeploymentTarget *ModelsDeploymentTarget `json:"deployment_target,omitempty"`
	// DeploymentTargetID on which target the data service is deployed (models.DeploymentTarget).
	DeploymentTargetId *string `json:"deployment_target_id,omitempty"`
	// DNSZone domain which this deployment should be a part of (eg pds-dns.io).
	DnsZone *string `json:"dns_zone,omitempty"`
	Error *ModelsErrorData `json:"error,omitempty"`
	// ID is auto generated on creation
	Id *string `json:"id,omitempty"`
	// ImageID image of data service (models.Image).
	ImageId *string `json:"image_id,omitempty"`
	// Initialize used to control startup scripts.
	Initialize *string `json:"initialize,omitempty"`
	// LoadBalancerSourceRanges can be used to restrict access to the data service (eg 37.0.113.0/24;82.0.220.42/24).
	LoadBalancerSourceRanges []string `json:"load_balancer_source_ranges,omitempty"`
	// Name given by user when creating the deployment.
	Name *string `json:"name,omitempty"`
	Namespace *ModelsNamespace `json:"namespace,omitempty"`
	// NamespaceID in which namespace the data service is deployed (models.Namespace).
	NamespaceId *string `json:"namespace_id,omitempty"`
	// NodeCount total nodes in the deployment.
	NodeCount *int32 `json:"node_count,omitempty"`
	// ProjectID which project the deployment belongs to (models.Project).
	ProjectId *string `json:"project_id,omitempty"`
	Resources *ModelsDeploymentResources `json:"resources,omitempty"`
	Restore *ModelsRestore `json:"restore,omitempty"`
	// ID of the restore to which the deployment belongs to (model.Restore).
	RestoreId *string `json:"restore_id,omitempty"`
	// ServiceType k8s service type.
	ServiceType *string `json:"service_type,omitempty"`
	// State of deployment.
	State *string `json:"state,omitempty"`
	StorageOptions *ModelsDeploymentStorageOptions `json:"storage_options,omitempty"`
	// TenantID which tenant the deployment belongs to (models.Tenant).
	TenantId *string `json:"tenant_id,omitempty"`
	// Whether Transport Layer Security support is enabled
	TlsEnabled *bool `json:"tls_enabled,omitempty"`
	// The Issuer (~Certificate Authority) for the TLS certificates
	TlsIssuer *string `json:"tls_issuer,omitempty"`
	// UpdatedAt is autogenerated on update
	UpdatedAt *string `json:"updated_at,omitempty"`
	// VersionID version of data service (models.Version).
	VersionId *string `json:"version_id,omitempty"`
}

// NewModelsDeployment instantiates a new ModelsDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsDeployment() *ModelsDeployment {
	this := ModelsDeployment{}
	return &this
}

// NewModelsDeploymentWithDefaults instantiates a new ModelsDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsDeploymentWithDefaults() *ModelsDeployment {
	this := ModelsDeployment{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ModelsDeployment) SetAccountId(v string) {
	o.AccountId = &v
}

// GetClusterResourceName returns the ClusterResourceName field value if set, zero value otherwise.
func (o *ModelsDeployment) GetClusterResourceName() string {
	if o == nil || o.ClusterResourceName == nil {
		var ret string
		return ret
	}
	return *o.ClusterResourceName
}

// GetClusterResourceNameOk returns a tuple with the ClusterResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetClusterResourceNameOk() (*string, bool) {
	if o == nil || o.ClusterResourceName == nil {
		return nil, false
	}
	return o.ClusterResourceName, true
}

// HasClusterResourceName returns a boolean if a field has been set.
func (o *ModelsDeployment) HasClusterResourceName() bool {
	if o != nil && o.ClusterResourceName != nil {
		return true
	}

	return false
}

// SetClusterResourceName gets a reference to the given string and assigns it to the ClusterResourceName field.
func (o *ModelsDeployment) SetClusterResourceName(v string) {
	o.ClusterResourceName = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ModelsDeployment) GetConfiguration() map[string]interface{} {
	if o == nil || o.Configuration == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ModelsDeployment) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given map[string]interface{} and assigns it to the Configuration field.
func (o *ModelsDeployment) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

// GetConnectionDetails returns the ConnectionDetails field value if set, zero value otherwise.
func (o *ModelsDeployment) GetConnectionDetails() map[string]interface{} {
	if o == nil || o.ConnectionDetails == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ConnectionDetails
}

// GetConnectionDetailsOk returns a tuple with the ConnectionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetConnectionDetailsOk() (map[string]interface{}, bool) {
	if o == nil || o.ConnectionDetails == nil {
		return nil, false
	}
	return o.ConnectionDetails, true
}

// HasConnectionDetails returns a boolean if a field has been set.
func (o *ModelsDeployment) HasConnectionDetails() bool {
	if o != nil && o.ConnectionDetails != nil {
		return true
	}

	return false
}

// SetConnectionDetails gets a reference to the given map[string]interface{} and assigns it to the ConnectionDetails field.
func (o *ModelsDeployment) SetConnectionDetails(v map[string]interface{}) {
	o.ConnectionDetails = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsDeployment) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsDeployment) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsDeployment) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDataServiceId returns the DataServiceId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetDataServiceId() string {
	if o == nil || o.DataServiceId == nil {
		var ret string
		return ret
	}
	return *o.DataServiceId
}

// GetDataServiceIdOk returns a tuple with the DataServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetDataServiceIdOk() (*string, bool) {
	if o == nil || o.DataServiceId == nil {
		return nil, false
	}
	return o.DataServiceId, true
}

// HasDataServiceId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasDataServiceId() bool {
	if o != nil && o.DataServiceId != nil {
		return true
	}

	return false
}

// SetDataServiceId gets a reference to the given string and assigns it to the DataServiceId field.
func (o *ModelsDeployment) SetDataServiceId(v string) {
	o.DataServiceId = &v
}

// GetDeploymentManifest returns the DeploymentManifest field value if set, zero value otherwise.
func (o *ModelsDeployment) GetDeploymentManifest() ModelsDeploymentManifest {
	if o == nil || o.DeploymentManifest == nil {
		var ret ModelsDeploymentManifest
		return ret
	}
	return *o.DeploymentManifest
}

// GetDeploymentManifestOk returns a tuple with the DeploymentManifest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetDeploymentManifestOk() (*ModelsDeploymentManifest, bool) {
	if o == nil || o.DeploymentManifest == nil {
		return nil, false
	}
	return o.DeploymentManifest, true
}

// HasDeploymentManifest returns a boolean if a field has been set.
func (o *ModelsDeployment) HasDeploymentManifest() bool {
	if o != nil && o.DeploymentManifest != nil {
		return true
	}

	return false
}

// SetDeploymentManifest gets a reference to the given ModelsDeploymentManifest and assigns it to the DeploymentManifest field.
func (o *ModelsDeployment) SetDeploymentManifest(v ModelsDeploymentManifest) {
	o.DeploymentManifest = &v
}

// GetDeploymentTarget returns the DeploymentTarget field value if set, zero value otherwise.
func (o *ModelsDeployment) GetDeploymentTarget() ModelsDeploymentTarget {
	if o == nil || o.DeploymentTarget == nil {
		var ret ModelsDeploymentTarget
		return ret
	}
	return *o.DeploymentTarget
}

// GetDeploymentTargetOk returns a tuple with the DeploymentTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetDeploymentTargetOk() (*ModelsDeploymentTarget, bool) {
	if o == nil || o.DeploymentTarget == nil {
		return nil, false
	}
	return o.DeploymentTarget, true
}

// HasDeploymentTarget returns a boolean if a field has been set.
func (o *ModelsDeployment) HasDeploymentTarget() bool {
	if o != nil && o.DeploymentTarget != nil {
		return true
	}

	return false
}

// SetDeploymentTarget gets a reference to the given ModelsDeploymentTarget and assigns it to the DeploymentTarget field.
func (o *ModelsDeployment) SetDeploymentTarget(v ModelsDeploymentTarget) {
	o.DeploymentTarget = &v
}

// GetDeploymentTargetId returns the DeploymentTargetId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetDeploymentTargetId() string {
	if o == nil || o.DeploymentTargetId == nil {
		var ret string
		return ret
	}
	return *o.DeploymentTargetId
}

// GetDeploymentTargetIdOk returns a tuple with the DeploymentTargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetDeploymentTargetIdOk() (*string, bool) {
	if o == nil || o.DeploymentTargetId == nil {
		return nil, false
	}
	return o.DeploymentTargetId, true
}

// HasDeploymentTargetId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasDeploymentTargetId() bool {
	if o != nil && o.DeploymentTargetId != nil {
		return true
	}

	return false
}

// SetDeploymentTargetId gets a reference to the given string and assigns it to the DeploymentTargetId field.
func (o *ModelsDeployment) SetDeploymentTargetId(v string) {
	o.DeploymentTargetId = &v
}

// GetDnsZone returns the DnsZone field value if set, zero value otherwise.
func (o *ModelsDeployment) GetDnsZone() string {
	if o == nil || o.DnsZone == nil {
		var ret string
		return ret
	}
	return *o.DnsZone
}

// GetDnsZoneOk returns a tuple with the DnsZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetDnsZoneOk() (*string, bool) {
	if o == nil || o.DnsZone == nil {
		return nil, false
	}
	return o.DnsZone, true
}

// HasDnsZone returns a boolean if a field has been set.
func (o *ModelsDeployment) HasDnsZone() bool {
	if o != nil && o.DnsZone != nil {
		return true
	}

	return false
}

// SetDnsZone gets a reference to the given string and assigns it to the DnsZone field.
func (o *ModelsDeployment) SetDnsZone(v string) {
	o.DnsZone = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ModelsDeployment) GetError() ModelsErrorData {
	if o == nil || o.Error == nil {
		var ret ModelsErrorData
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetErrorOk() (*ModelsErrorData, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ModelsDeployment) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ModelsErrorData and assigns it to the Error field.
func (o *ModelsDeployment) SetError(v ModelsErrorData) {
	o.Error = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsDeployment) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsDeployment) SetId(v string) {
	o.Id = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetImageId() string {
	if o == nil || o.ImageId == nil {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetImageIdOk() (*string, bool) {
	if o == nil || o.ImageId == nil {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasImageId() bool {
	if o != nil && o.ImageId != nil {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *ModelsDeployment) SetImageId(v string) {
	o.ImageId = &v
}

// GetInitialize returns the Initialize field value if set, zero value otherwise.
func (o *ModelsDeployment) GetInitialize() string {
	if o == nil || o.Initialize == nil {
		var ret string
		return ret
	}
	return *o.Initialize
}

// GetInitializeOk returns a tuple with the Initialize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetInitializeOk() (*string, bool) {
	if o == nil || o.Initialize == nil {
		return nil, false
	}
	return o.Initialize, true
}

// HasInitialize returns a boolean if a field has been set.
func (o *ModelsDeployment) HasInitialize() bool {
	if o != nil && o.Initialize != nil {
		return true
	}

	return false
}

// SetInitialize gets a reference to the given string and assigns it to the Initialize field.
func (o *ModelsDeployment) SetInitialize(v string) {
	o.Initialize = &v
}

// GetLoadBalancerSourceRanges returns the LoadBalancerSourceRanges field value if set, zero value otherwise.
func (o *ModelsDeployment) GetLoadBalancerSourceRanges() []string {
	if o == nil || o.LoadBalancerSourceRanges == nil {
		var ret []string
		return ret
	}
	return o.LoadBalancerSourceRanges
}

// GetLoadBalancerSourceRangesOk returns a tuple with the LoadBalancerSourceRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetLoadBalancerSourceRangesOk() ([]string, bool) {
	if o == nil || o.LoadBalancerSourceRanges == nil {
		return nil, false
	}
	return o.LoadBalancerSourceRanges, true
}

// HasLoadBalancerSourceRanges returns a boolean if a field has been set.
func (o *ModelsDeployment) HasLoadBalancerSourceRanges() bool {
	if o != nil && o.LoadBalancerSourceRanges != nil {
		return true
	}

	return false
}

// SetLoadBalancerSourceRanges gets a reference to the given []string and assigns it to the LoadBalancerSourceRanges field.
func (o *ModelsDeployment) SetLoadBalancerSourceRanges(v []string) {
	o.LoadBalancerSourceRanges = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsDeployment) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsDeployment) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsDeployment) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ModelsDeployment) GetNamespace() ModelsNamespace {
	if o == nil || o.Namespace == nil {
		var ret ModelsNamespace
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetNamespaceOk() (*ModelsNamespace, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ModelsDeployment) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given ModelsNamespace and assigns it to the Namespace field.
func (o *ModelsDeployment) SetNamespace(v ModelsNamespace) {
	o.Namespace = &v
}

// GetNamespaceId returns the NamespaceId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetNamespaceId() string {
	if o == nil || o.NamespaceId == nil {
		var ret string
		return ret
	}
	return *o.NamespaceId
}

// GetNamespaceIdOk returns a tuple with the NamespaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetNamespaceIdOk() (*string, bool) {
	if o == nil || o.NamespaceId == nil {
		return nil, false
	}
	return o.NamespaceId, true
}

// HasNamespaceId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasNamespaceId() bool {
	if o != nil && o.NamespaceId != nil {
		return true
	}

	return false
}

// SetNamespaceId gets a reference to the given string and assigns it to the NamespaceId field.
func (o *ModelsDeployment) SetNamespaceId(v string) {
	o.NamespaceId = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise.
func (o *ModelsDeployment) GetNodeCount() int32 {
	if o == nil || o.NodeCount == nil {
		var ret int32
		return ret
	}
	return *o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetNodeCountOk() (*int32, bool) {
	if o == nil || o.NodeCount == nil {
		return nil, false
	}
	return o.NodeCount, true
}

// HasNodeCount returns a boolean if a field has been set.
func (o *ModelsDeployment) HasNodeCount() bool {
	if o != nil && o.NodeCount != nil {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given int32 and assigns it to the NodeCount field.
func (o *ModelsDeployment) SetNodeCount(v int32) {
	o.NodeCount = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ModelsDeployment) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ModelsDeployment) GetResources() ModelsDeploymentResources {
	if o == nil || o.Resources == nil {
		var ret ModelsDeploymentResources
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetResourcesOk() (*ModelsDeploymentResources, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ModelsDeployment) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given ModelsDeploymentResources and assigns it to the Resources field.
func (o *ModelsDeployment) SetResources(v ModelsDeploymentResources) {
	o.Resources = &v
}

// GetRestore returns the Restore field value if set, zero value otherwise.
func (o *ModelsDeployment) GetRestore() ModelsRestore {
	if o == nil || o.Restore == nil {
		var ret ModelsRestore
		return ret
	}
	return *o.Restore
}

// GetRestoreOk returns a tuple with the Restore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetRestoreOk() (*ModelsRestore, bool) {
	if o == nil || o.Restore == nil {
		return nil, false
	}
	return o.Restore, true
}

// HasRestore returns a boolean if a field has been set.
func (o *ModelsDeployment) HasRestore() bool {
	if o != nil && o.Restore != nil {
		return true
	}

	return false
}

// SetRestore gets a reference to the given ModelsRestore and assigns it to the Restore field.
func (o *ModelsDeployment) SetRestore(v ModelsRestore) {
	o.Restore = &v
}

// GetRestoreId returns the RestoreId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetRestoreId() string {
	if o == nil || o.RestoreId == nil {
		var ret string
		return ret
	}
	return *o.RestoreId
}

// GetRestoreIdOk returns a tuple with the RestoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetRestoreIdOk() (*string, bool) {
	if o == nil || o.RestoreId == nil {
		return nil, false
	}
	return o.RestoreId, true
}

// HasRestoreId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasRestoreId() bool {
	if o != nil && o.RestoreId != nil {
		return true
	}

	return false
}

// SetRestoreId gets a reference to the given string and assigns it to the RestoreId field.
func (o *ModelsDeployment) SetRestoreId(v string) {
	o.RestoreId = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *ModelsDeployment) GetServiceType() string {
	if o == nil || o.ServiceType == nil {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetServiceTypeOk() (*string, bool) {
	if o == nil || o.ServiceType == nil {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *ModelsDeployment) HasServiceType() bool {
	if o != nil && o.ServiceType != nil {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *ModelsDeployment) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ModelsDeployment) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ModelsDeployment) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ModelsDeployment) SetState(v string) {
	o.State = &v
}

// GetStorageOptions returns the StorageOptions field value if set, zero value otherwise.
func (o *ModelsDeployment) GetStorageOptions() ModelsDeploymentStorageOptions {
	if o == nil || o.StorageOptions == nil {
		var ret ModelsDeploymentStorageOptions
		return ret
	}
	return *o.StorageOptions
}

// GetStorageOptionsOk returns a tuple with the StorageOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetStorageOptionsOk() (*ModelsDeploymentStorageOptions, bool) {
	if o == nil || o.StorageOptions == nil {
		return nil, false
	}
	return o.StorageOptions, true
}

// HasStorageOptions returns a boolean if a field has been set.
func (o *ModelsDeployment) HasStorageOptions() bool {
	if o != nil && o.StorageOptions != nil {
		return true
	}

	return false
}

// SetStorageOptions gets a reference to the given ModelsDeploymentStorageOptions and assigns it to the StorageOptions field.
func (o *ModelsDeployment) SetStorageOptions(v ModelsDeploymentStorageOptions) {
	o.StorageOptions = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ModelsDeployment) SetTenantId(v string) {
	o.TenantId = &v
}

// GetTlsEnabled returns the TlsEnabled field value if set, zero value otherwise.
func (o *ModelsDeployment) GetTlsEnabled() bool {
	if o == nil || o.TlsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TlsEnabled
}

// GetTlsEnabledOk returns a tuple with the TlsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetTlsEnabledOk() (*bool, bool) {
	if o == nil || o.TlsEnabled == nil {
		return nil, false
	}
	return o.TlsEnabled, true
}

// HasTlsEnabled returns a boolean if a field has been set.
func (o *ModelsDeployment) HasTlsEnabled() bool {
	if o != nil && o.TlsEnabled != nil {
		return true
	}

	return false
}

// SetTlsEnabled gets a reference to the given bool and assigns it to the TlsEnabled field.
func (o *ModelsDeployment) SetTlsEnabled(v bool) {
	o.TlsEnabled = &v
}

// GetTlsIssuer returns the TlsIssuer field value if set, zero value otherwise.
func (o *ModelsDeployment) GetTlsIssuer() string {
	if o == nil || o.TlsIssuer == nil {
		var ret string
		return ret
	}
	return *o.TlsIssuer
}

// GetTlsIssuerOk returns a tuple with the TlsIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetTlsIssuerOk() (*string, bool) {
	if o == nil || o.TlsIssuer == nil {
		return nil, false
	}
	return o.TlsIssuer, true
}

// HasTlsIssuer returns a boolean if a field has been set.
func (o *ModelsDeployment) HasTlsIssuer() bool {
	if o != nil && o.TlsIssuer != nil {
		return true
	}

	return false
}

// SetTlsIssuer gets a reference to the given string and assigns it to the TlsIssuer field.
func (o *ModelsDeployment) SetTlsIssuer(v string) {
	o.TlsIssuer = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsDeployment) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsDeployment) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsDeployment) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *ModelsDeployment) GetVersionId() string {
	if o == nil || o.VersionId == nil {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeployment) GetVersionIdOk() (*string, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *ModelsDeployment) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *ModelsDeployment) SetVersionId(v string) {
	o.VersionId = &v
}

func (o ModelsDeployment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if o.ClusterResourceName != nil {
		toSerialize["cluster_resource_name"] = o.ClusterResourceName
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.ConnectionDetails != nil {
		toSerialize["connection_details"] = o.ConnectionDetails
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.DataServiceId != nil {
		toSerialize["data_service_id"] = o.DataServiceId
	}
	if o.DeploymentManifest != nil {
		toSerialize["deployment_manifest"] = o.DeploymentManifest
	}
	if o.DeploymentTarget != nil {
		toSerialize["deployment_target"] = o.DeploymentTarget
	}
	if o.DeploymentTargetId != nil {
		toSerialize["deployment_target_id"] = o.DeploymentTargetId
	}
	if o.DnsZone != nil {
		toSerialize["dns_zone"] = o.DnsZone
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ImageId != nil {
		toSerialize["image_id"] = o.ImageId
	}
	if o.Initialize != nil {
		toSerialize["initialize"] = o.Initialize
	}
	if o.LoadBalancerSourceRanges != nil {
		toSerialize["load_balancer_source_ranges"] = o.LoadBalancerSourceRanges
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.NamespaceId != nil {
		toSerialize["namespace_id"] = o.NamespaceId
	}
	if o.NodeCount != nil {
		toSerialize["node_count"] = o.NodeCount
	}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if o.Restore != nil {
		toSerialize["restore"] = o.Restore
	}
	if o.RestoreId != nil {
		toSerialize["restore_id"] = o.RestoreId
	}
	if o.ServiceType != nil {
		toSerialize["service_type"] = o.ServiceType
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.StorageOptions != nil {
		toSerialize["storage_options"] = o.StorageOptions
	}
	if o.TenantId != nil {
		toSerialize["tenant_id"] = o.TenantId
	}
	if o.TlsEnabled != nil {
		toSerialize["tls_enabled"] = o.TlsEnabled
	}
	if o.TlsIssuer != nil {
		toSerialize["tls_issuer"] = o.TlsIssuer
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.VersionId != nil {
		toSerialize["version_id"] = o.VersionId
	}
	return json.Marshal(toSerialize)
}

type NullableModelsDeployment struct {
	value *ModelsDeployment
	isSet bool
}

func (v NullableModelsDeployment) Get() *ModelsDeployment {
	return v.value
}

func (v *NullableModelsDeployment) Set(val *ModelsDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsDeployment(val *ModelsDeployment) *NullableModelsDeployment {
	return &NullableModelsDeployment{value: val, isSet: true}
}

func (v NullableModelsDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


