/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ModelsS3CompatibleCredentials struct for ModelsS3CompatibleCredentials
type ModelsS3CompatibleCredentials struct {
	// Access key for S3-compatible user.
	AccessKey *string `json:"access_key,omitempty"`
	// Endpoint of S3-compatible storage service.
	Endpoint *string `json:"endpoint,omitempty"`
	// Secret key for S3-compatible user.
	SecretKey *string `json:"secret_key,omitempty"`
}

// NewModelsS3CompatibleCredentials instantiates a new ModelsS3CompatibleCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsS3CompatibleCredentials() *ModelsS3CompatibleCredentials {
	this := ModelsS3CompatibleCredentials{}
	return &this
}

// NewModelsS3CompatibleCredentialsWithDefaults instantiates a new ModelsS3CompatibleCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsS3CompatibleCredentialsWithDefaults() *ModelsS3CompatibleCredentials {
	this := ModelsS3CompatibleCredentials{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *ModelsS3CompatibleCredentials) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsS3CompatibleCredentials) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *ModelsS3CompatibleCredentials) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *ModelsS3CompatibleCredentials) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *ModelsS3CompatibleCredentials) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsS3CompatibleCredentials) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *ModelsS3CompatibleCredentials) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *ModelsS3CompatibleCredentials) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *ModelsS3CompatibleCredentials) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsS3CompatibleCredentials) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *ModelsS3CompatibleCredentials) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *ModelsS3CompatibleCredentials) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o ModelsS3CompatibleCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["access_key"] = o.AccessKey
	}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	if o.SecretKey != nil {
		toSerialize["secret_key"] = o.SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableModelsS3CompatibleCredentials struct {
	value *ModelsS3CompatibleCredentials
	isSet bool
}

func (v NullableModelsS3CompatibleCredentials) Get() *ModelsS3CompatibleCredentials {
	return v.value
}

func (v *NullableModelsS3CompatibleCredentials) Set(val *ModelsS3CompatibleCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsS3CompatibleCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsS3CompatibleCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsS3CompatibleCredentials(val *ModelsS3CompatibleCredentials) *NullableModelsS3CompatibleCredentials {
	return &NullableModelsS3CompatibleCredentials{value: val, isSet: true}
}

func (v NullableModelsS3CompatibleCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsS3CompatibleCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


