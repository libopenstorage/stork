/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersGenerateTokenResponse struct for ControllersGenerateTokenResponse
type ControllersGenerateTokenResponse struct {
	Token *string `json:"token,omitempty"`
	ValidFor *string `json:"valid_for,omitempty"`
}

// NewControllersGenerateTokenResponse instantiates a new ControllersGenerateTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersGenerateTokenResponse() *ControllersGenerateTokenResponse {
	this := ControllersGenerateTokenResponse{}
	return &this
}

// NewControllersGenerateTokenResponseWithDefaults instantiates a new ControllersGenerateTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersGenerateTokenResponseWithDefaults() *ControllersGenerateTokenResponse {
	this := ControllersGenerateTokenResponse{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ControllersGenerateTokenResponse) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersGenerateTokenResponse) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ControllersGenerateTokenResponse) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ControllersGenerateTokenResponse) SetToken(v string) {
	o.Token = &v
}

// GetValidFor returns the ValidFor field value if set, zero value otherwise.
func (o *ControllersGenerateTokenResponse) GetValidFor() string {
	if o == nil || o.ValidFor == nil {
		var ret string
		return ret
	}
	return *o.ValidFor
}

// GetValidForOk returns a tuple with the ValidFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersGenerateTokenResponse) GetValidForOk() (*string, bool) {
	if o == nil || o.ValidFor == nil {
		return nil, false
	}
	return o.ValidFor, true
}

// HasValidFor returns a boolean if a field has been set.
func (o *ControllersGenerateTokenResponse) HasValidFor() bool {
	if o != nil && o.ValidFor != nil {
		return true
	}

	return false
}

// SetValidFor gets a reference to the given string and assigns it to the ValidFor field.
func (o *ControllersGenerateTokenResponse) SetValidFor(v string) {
	o.ValidFor = &v
}

func (o ControllersGenerateTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.ValidFor != nil {
		toSerialize["valid_for"] = o.ValidFor
	}
	return json.Marshal(toSerialize)
}

type NullableControllersGenerateTokenResponse struct {
	value *ControllersGenerateTokenResponse
	isSet bool
}

func (v NullableControllersGenerateTokenResponse) Get() *ControllersGenerateTokenResponse {
	return v.value
}

func (v *NullableControllersGenerateTokenResponse) Set(val *ControllersGenerateTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersGenerateTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersGenerateTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersGenerateTokenResponse(val *ControllersGenerateTokenResponse) *NullableControllersGenerateTokenResponse {
	return &NullableControllersGenerateTokenResponse{value: val, isSet: true}
}

func (v NullableControllersGenerateTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersGenerateTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


