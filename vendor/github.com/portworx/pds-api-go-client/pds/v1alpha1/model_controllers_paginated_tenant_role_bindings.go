/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersPaginatedTenantRoleBindings struct for ControllersPaginatedTenantRoleBindings
type ControllersPaginatedTenantRoleBindings struct {
	Data []ModelsLegacyTenantBinding `json:"data,omitempty"`
}

// NewControllersPaginatedTenantRoleBindings instantiates a new ControllersPaginatedTenantRoleBindings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersPaginatedTenantRoleBindings() *ControllersPaginatedTenantRoleBindings {
	this := ControllersPaginatedTenantRoleBindings{}
	return &this
}

// NewControllersPaginatedTenantRoleBindingsWithDefaults instantiates a new ControllersPaginatedTenantRoleBindings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersPaginatedTenantRoleBindingsWithDefaults() *ControllersPaginatedTenantRoleBindings {
	this := ControllersPaginatedTenantRoleBindings{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ControllersPaginatedTenantRoleBindings) GetData() []ModelsLegacyTenantBinding {
	if o == nil || o.Data == nil {
		var ret []ModelsLegacyTenantBinding
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersPaginatedTenantRoleBindings) GetDataOk() ([]ModelsLegacyTenantBinding, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ControllersPaginatedTenantRoleBindings) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []ModelsLegacyTenantBinding and assigns it to the Data field.
func (o *ControllersPaginatedTenantRoleBindings) SetData(v []ModelsLegacyTenantBinding) {
	o.Data = v
}

func (o ControllersPaginatedTenantRoleBindings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableControllersPaginatedTenantRoleBindings struct {
	value *ControllersPaginatedTenantRoleBindings
	isSet bool
}

func (v NullableControllersPaginatedTenantRoleBindings) Get() *ControllersPaginatedTenantRoleBindings {
	return v.value
}

func (v *NullableControllersPaginatedTenantRoleBindings) Set(val *ControllersPaginatedTenantRoleBindings) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersPaginatedTenantRoleBindings) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersPaginatedTenantRoleBindings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersPaginatedTenantRoleBindings(val *ControllersPaginatedTenantRoleBindings) *NullableControllersPaginatedTenantRoleBindings {
	return &NullableControllersPaginatedTenantRoleBindings{value: val, isSet: true}
}

func (v NullableControllersPaginatedTenantRoleBindings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersPaginatedTenantRoleBindings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


