/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ModelsGoogleCredentials struct for ModelsGoogleCredentials
type ModelsGoogleCredentials struct {
	// JSON key for the Google Storage account.
	JsonKey *string `json:"json_key,omitempty"`
	// Project ID of the Google project.
	ProjectId *string `json:"project_id,omitempty"`
}

// NewModelsGoogleCredentials instantiates a new ModelsGoogleCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsGoogleCredentials() *ModelsGoogleCredentials {
	this := ModelsGoogleCredentials{}
	return &this
}

// NewModelsGoogleCredentialsWithDefaults instantiates a new ModelsGoogleCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsGoogleCredentialsWithDefaults() *ModelsGoogleCredentials {
	this := ModelsGoogleCredentials{}
	return &this
}

// GetJsonKey returns the JsonKey field value if set, zero value otherwise.
func (o *ModelsGoogleCredentials) GetJsonKey() string {
	if o == nil || o.JsonKey == nil {
		var ret string
		return ret
	}
	return *o.JsonKey
}

// GetJsonKeyOk returns a tuple with the JsonKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsGoogleCredentials) GetJsonKeyOk() (*string, bool) {
	if o == nil || o.JsonKey == nil {
		return nil, false
	}
	return o.JsonKey, true
}

// HasJsonKey returns a boolean if a field has been set.
func (o *ModelsGoogleCredentials) HasJsonKey() bool {
	if o != nil && o.JsonKey != nil {
		return true
	}

	return false
}

// SetJsonKey gets a reference to the given string and assigns it to the JsonKey field.
func (o *ModelsGoogleCredentials) SetJsonKey(v string) {
	o.JsonKey = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ModelsGoogleCredentials) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsGoogleCredentials) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ModelsGoogleCredentials) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ModelsGoogleCredentials) SetProjectId(v string) {
	o.ProjectId = &v
}

func (o ModelsGoogleCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JsonKey != nil {
		toSerialize["json_key"] = o.JsonKey
	}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	return json.Marshal(toSerialize)
}

type NullableModelsGoogleCredentials struct {
	value *ModelsGoogleCredentials
	isSet bool
}

func (v NullableModelsGoogleCredentials) Get() *ModelsGoogleCredentials {
	return v.value
}

func (v *NullableModelsGoogleCredentials) Set(val *ModelsGoogleCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsGoogleCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsGoogleCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsGoogleCredentials(val *ModelsGoogleCredentials) *NullableModelsGoogleCredentials {
	return &NullableModelsGoogleCredentials{value: val, isSet: true}
}

func (v NullableModelsGoogleCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsGoogleCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


